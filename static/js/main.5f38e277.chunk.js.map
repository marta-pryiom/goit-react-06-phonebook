{"version":3,"sources":["Component/Filter/Filter.module.css","Component/App/App.module.css","Component/Container/Container.module.css","Component/Container/Container.js","redux/contacts/actions.js","Component/ContactForm/ContactForm.js","redux/selectors.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","Component/App/App.js","redux/contacts/reducers.js","redux/store.js","index.js","Component/ContactForm/ContactForm.module.css","Component/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","submit","createAction","name","number","payload","id","uuidv4","deleteContacts","filteredContacts","ContactForm","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","reset","Box","Form","onSubmit","preventDefault","Label","Input","type","placeholder","pattern","title","required","onChange","Btn","disabled","length","filterValue","state","filter","getVisibleContact","normalizedFilter","contacts","toLowerCase","items","getContacts","includes","Filter","useSelector","FilterTitle","currentTarget","ContactList","map","ContactItem","Text","onClick","App","createReducer","el","alert","_","persistConfig","key","version","storage","blacklist","rootReducer","combineReducers","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5f38e277.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1sY1M\",\"FilterTitle\":\"Filter_FilterTitle__3XnRk\",\"Input\":\"Filter_Input__3k1AY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3CRON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1aBPH\"};","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n/*ToolKit*/\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst submit = createAction('contact / add', (name, number) => {\r\n    return {\r\n        payload: {\r\n            id: uuidv4(),\r\n            name: name,\r\n            number: number,\r\n        },\r\n    };\r\n});\r\nconst deleteContacts = createAction('contact/delete');\r\nconst filteredContacts = createAction('contact/filter');\r\n\r\n// const submit = (name, number) => ({\r\n//     type: ADD,\r\n//     payload: {\r\n//         id: uuidv4(),\r\n//         name: name,\r\n//         number: number,\r\n//     },\r\n// });\r\n\r\n// const deleteContacts = contactId => ({\r\n//     type: DELETE,\r\n//     payload: contactId,\r\n// });\r\n// const filteredContacts = value => ({\r\n//     type:FILTER,\r\n//     payload: value,\r\n// });\r\n\r\nexport { submit, deleteContacts, filteredContacts };\r\n","import { useState } from 'react';\r\nimport { submit } from '../../redux/contacts/actions';\r\n// import { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(submit(name, number));\r\n        reset();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <div className={s.Box}>\r\n            <form className={s.Form} onSubmit={handleSubmit}>\r\n                <label className={s.Label}>\r\n                    Name\r\n                    <input\r\n                        className={s.Input}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.Label}>\r\n                    Number\r\n                    <input\r\n                        className={s.Input}\r\n                        type=\"tel\"\r\n                        value={number}\r\n                        name=\"number\"\r\n                        placeholder=\"Enter number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className={s.Btn} disabled={name.length === 0}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onSubmit: (name, number) => dispatch(submit(name, number)),\r\n// });\r\n\r\n// ContactForm.propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired,\r\n// };\r\nexport default ContactForm;\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","export const filterValue = state => state.filter;\r\nexport const getContacts = state => state.items;\r\nexport const getVisibleContact = state => {\r\n    const normalizedFilter = filterValue(state.contacts).toLowerCase();\r\n    const filteredContacts = getContacts(state.contacts).filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return filteredContacts;\r\n};\r\n","import s from './Filter.module.css';\r\n// import PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\nimport { filteredContacts } from '../../redux/contacts/actions';\r\nimport { filterValue } from '../../redux/selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction Filter() {\r\n    const value = useSelector(filterValue);\r\n    const dispatch = useDispatch();\r\n    const onChange = e => {\r\n        dispatch(filteredContacts(e.currentTarget.value));\r\n    };\r\n    return (\r\n        <div className={s.Filter}>\r\n            <label className={s.FilterTitle}>\r\n                Find contacts by name\r\n                <input\r\n                    className={s.Input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//     onChange: PropTypes.func.isRequired,\r\n//     filter: PropTypes.string.isRequired,\r\n// };\r\nexport default Filter;\r\n\r\n// const mapStateToProps = state => ({\r\n//     value: state.filter,\r\n// });\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onChange: e => dispatch(filteredContacts(e.currentTarget.value)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import s from './ContactList.module.css';\r\n// import PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\nimport { deleteContacts } from '../../redux/contacts/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContact } from '../../redux/selectors';\r\n\r\nfunction ContactList() {\r\n    const contacts = useSelector(getVisibleContact);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ul className={s.ContactList}>\r\n            {contacts.map(({ name, number, id }) => (\r\n                <li key={id} id={s.ContactItem}>\r\n                    <p className={s.Text}>{name}:</p>\r\n                    <p className={s.Text}>{number}:</p>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => dispatch(deleteContacts(id))}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n// const getVisibleContact = (allItems, filter) => {\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     return allItems.filter(({ name }) =>\r\n//         name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n// };\r\n// const mapStateToprops = state => ({\r\n//     contacts: getVisibleContact(state.items, state.filter),\r\n// });\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onDeleteContact: id => dispatch(deleteContacts(id)),\r\n// });\r\n// export default connect(mapStateToprops, mapDispatchToProps)(ContactList);\r\n// ContactList.propTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//             name: PropTypes.string.isRequired,\r\n//             number: PropTypes.string.isRequired,\r\n//             id: PropTypes.string.isRequired,\r\n//         }),\r\n//     ),\r\n\r\n//     onDeleteContact: PropTypes.func.isRequired,\r\n// };\r\n","import s from './App.module.css';\r\nimport Container from '../Container';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\n\r\nfunction App() {\r\n    return (\r\n        <Container>\r\n            <h1 className={s.title}>Phonebook</h1>\r\n            <ContactForm />\r\n            <h2 className={s.title}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n// import types from '../types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport contacts from '../../contacts.json';\r\nimport { submit, deleteContacts, filteredContacts } from './actions';\r\n\r\n/* ToolKit */\r\nexport const items = createReducer([...contacts], {\r\n    [submit]: (state, { payload }) => {\r\n        const searchSameName = state\r\n            .map(el => el.name.toLowerCase())\r\n            .includes(payload.name.toLowerCase());\r\n        if (searchSameName) {\r\n            return alert(`${payload.name} is already in contacts`);\r\n        } else {\r\n            return [payload, ...state];\r\n        }\r\n    },\r\n    [deleteContacts]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport const filter = createReducer('', {\r\n    [filteredContacts]: (_, { payload }) => payload,\r\n});\r\n\r\n// export default combineReducers({\r\n//     items,\r\n//     filter,\r\n// });\r\n// const filter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.FILTER:\r\n//             return payload;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// const items = (state = [...contacts], { type, payload }) => {\r\n//     console.log(state);\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             const searchSameName = state\r\n//                 .map(el => el.name.toLowerCase())\r\n//                 .includes(payload.name.toLowerCase());\r\n//             if (searchSameName) {\r\n//                 return alert(`${payload.name} is already in contacts`);\r\n//             } else {\r\n//                 return [payload, ...state];\r\n//             }\r\n\r\n//         case types.DELETE:\r\n//             return state.filter(({ id }) => id !== payload);\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.FILTER:\r\n//             return payload;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n","// import { createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// import { rootReducer } from './contacts/reducers';\r\n/*з ToolKit */\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { items, filter } from './contacts/reducers';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nconst persistConfig = {\r\n    key: 'savedContacts',\r\n    version: 1,\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({ items, filter });\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(persistConfig, rootReducer),\r\n    },\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [\r\n                    FLUSH,\r\n                    REHYDRATE,\r\n                    PAUSE,\r\n                    PERSIST,\r\n                    PURGE,\r\n                    REGISTER,\r\n                ],\r\n            },\r\n        }).concat(logger),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './Component/App/App';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n    <React.StrictMode>\n        <PersistGate persistor={persistor} loading={null}>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </PersistGate>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"ContactForm_Box__1j7Ot\",\"Form\":\"ContactForm_Form__3-j1v\",\"Label\":\"ContactForm_Label__1Cw24\",\"Input\":\"ContactForm_Input__9Xhgb\",\"Btn\":\"ContactForm_Btn__14Xmz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__27AIU\",\"ContactItem\":\"ContactList_ContactItem__3jerE\",\"Text\":\"ContactList_Text__122S3\"};"],"sourceRoot":""}