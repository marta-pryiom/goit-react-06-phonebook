{"version":3,"sources":["Component/App/App.module.css","Component/Container/Container.module.css","Component/ContactForm/ContactForm.module.css","Component/Container/Container.js","redux/types.js","Component/ContactForm/ContactForm.js","redux/contacts/actions.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","Component/App/App.js","redux/contacts/reducers.js","redux/store.js","index.js","Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","s","container","connect","dispatch","onSubmit","name","number","type","types","payload","id","uuidv4","submit","useState","setName","setNumber","handleChange","e","target","value","reset","Box","Form","preventDefault","Label","Input","placeholder","pattern","title","required","onChange","Btn","disabled","length","getVisibleContact","allItems","filter","console","log","normalizedFilter","toLowerCase","includes","state","items","currentTarget","Filter","FilterTitle","contacts","onDeleteContact","ContactList","map","ContactItem","Text","onClick","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7862a8ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3CRON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1aBPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"ContactForm_Box__1j7Ot\",\"Form\":\"ContactForm_Form__3-j1v\",\"Label\":\"ContactForm_Label__1Cw24\",\"Input\":\"ContactForm_Input__9Xhgb\",\"Btn\":\"ContactForm_Btn__14Xmz\"};","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","export default {\r\n    ADD: 'contact/add',\r\n    DELETE: 'contact/delete',\r\n    FILTER: 'contact/filter',\r\n};\r\n","import { useState } from 'react';\r\nimport { submit } from '../../redux/contacts/actions';\r\n\r\nimport { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        // const contact = {\r\n        //     // id: uuidv4(),\r\n        //     name,\r\n        //     number,\r\n        // };\r\n        onSubmit(name, number);\r\n        reset();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <div className={s.Box}>\r\n            <form className={s.Form} onSubmit={handleSubmit}>\r\n                <label className={s.Label}>\r\n                    Name\r\n                    <input\r\n                        className={s.Input}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.Label}>\r\n                    Number\r\n                    <input\r\n                        className={s.Input}\r\n                        type=\"tel\"\r\n                        value={number}\r\n                        name=\"number\"\r\n                        placeholder=\"Enter number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className={s.Btn} disabled={name.length === 0}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired,\r\n//     handleSubmit: PropTypes.func,\r\n//     handleChange: PropTypes.func,\r\n//     handleAgreeChange: PropTypes.func,\r\n//     nameId: PropTypes.number,\r\n//     numberId: PropTypes.number,\r\n//     agreeId: PropTypes.number,\r\n// };\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(submit(name, number)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n// export default ContactForm;\r\n","import types from '../types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst submit = (name, number) => ({\r\n    type: types.ADD,\r\n    payload: {\r\n        id: uuidv4(),\r\n        name: name,\r\n        number: number,\r\n    },\r\n});\r\n\r\nconst deleteContacts = contactId => ({\r\n    type: types.DELETE,\r\n    payload: contactId,\r\n});\r\nconst filteredContacts = value => ({\r\n    type: types.FILTER,\r\n    payload: value,\r\n});\r\n\r\nexport { submit, deleteContacts, filteredContacts };\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filteredContacts } from '../../redux/contacts/actions';\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (\r\n        <div className={s.Filter}>\r\n            <label className={s.FilterTitle}>\r\n                Find contacts by name\r\n                <input\r\n                    className={s.Input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//     onChange: PropTypes.func.isRequired,\r\n//     filter: PropTypes.string.isRequired,\r\n// };\r\nconst getVisibleContact = (allItems, filter) => {\r\n    console.log(allItems);\r\n    console.log(filter);\r\n    // const { filter, items } = state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return allItems.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};\r\nconst mapStateToProps = state => ({\r\n    value: getVisibleContact(state.items, state.filter),\r\n    // value: state.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(filteredContacts(e.currentTarget.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n// export default Filter;\r\n","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContacts } from '../../redux/contacts/actions';\r\n// import { useEffect } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n    /* винести функцію */\r\n\r\n    console.log(contacts);\r\n    // function ContactList() {\r\n    // const contacts = useSelector();\r\n    return (\r\n        <ul className={s.ContactList}>\r\n            {contacts.map(({ name, number, id }) => (\r\n                <li key={id} id={s.ContactItem}>\r\n                    <p className={s.Text}>{name}:</p>\r\n                    <p className={s.Text}>{number}:</p>\r\n                    <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\n// ContactList.propTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//             name: PropTypes.string.isRequired,\r\n//             number: PropTypes.string.isRequired,\r\n//             id: PropTypes.string.isRequired,\r\n//         }),\r\n//     ),\r\n\r\n//     onDeleteContact: PropTypes.func.isRequired,\r\n// };\r\nconst mapStateToprops = state => ({\r\n    contacts: state.items,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: id => dispatch(deleteContacts(id)),\r\n\r\n    // onDeleteContact: id => dispatch(actions.deleteContacts(id)),\r\n});\r\nexport default connect(mapStateToprops, mapDispatchToProps)(ContactList);\r\n// export default ContactList;\r\n","// import { useState, useEffect } from 'react';\r\nimport s from './App.module.css';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { connect } from 'react-redux';\r\n// import actions from '../../redux/contacts/actions';\r\nimport Container from '../Container';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\n// import contactsArray from '../../contacts.json';\r\n// import { useHookLocalStorage } from '../../hooks/useHookLocalStorage';\r\n\r\nfunction App() {\r\n    // // const [contacts, setContacts] =\r\n    // //     useHookLocalStorage('contacts') ?? contactsArray;\r\n    // const [filter, setFilter] = useState('');\r\n\r\n    // /*без hook-localStorage */\r\n    // const [contacts, setContacts] = useState(() => {\r\n    //     return JSON.parse(localStorage.getItem('contacts')) ?? contactsArray;\r\n    // });\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    // }, [contacts]);\r\n\r\n    // const formSubmit = info => {\r\n    //     const searchSameName = contacts\r\n    //         .map(el => el.name.toLowerCase())\r\n    //         .includes(info.name.toLowerCase());\r\n    //     if (searchSameName) {\r\n    //         return alert(`${info.name} is already in contacts`);\r\n    //     } else {\r\n    //         const newContact = { ...info, id: uuidv4() };\r\n    //         setContacts([newContact, ...contacts]);\r\n    //     }\r\n    // };\r\n    // const setFilteredContacts = e => {\r\n    //     setFilter(e.target.value);\r\n    // };\r\n\r\n    // const deleteContact = contactId => {\r\n    //     setContacts(contacts.filter(contact => contact.id !== contactId));\r\n    // };\r\n    return (\r\n        <Container>\r\n            <h1 className={s.title}>Phonebook</h1>\r\n            <ContactForm />\r\n            <h2 className={s.title}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n        </Container>\r\n        // <Container>\r\n        //     <h1 className={s.title}>Phonebook</h1>\r\n        //     <ContactForm onSubmit={formSubmit} />\r\n        //     <h2 className={s.title}>Contacts</h2>\r\n        //     <Filter filter={filter} onChange={setFilteredContacts} />\r\n        //     <ContactList\r\n        //         contacts={getVisibleContact()}\r\n        //         onDeleteContact={deleteContact}\r\n        //     />\r\n        // </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport types from '../types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport contacts from '../../contacts.json';\r\n\r\nconst items = (state = [...contacts], { type, payload }) => {\r\n    console.log(state);\r\n    switch (type) {\r\n        case types.ADD:\r\n            // const searchSameName = state\r\n            //     .map(el => el.name.toLowerCase())\r\n            //     .includes(payload.name.toLowerCase());\r\n            // if (searchSameName) {\r\n            //     return alert(`${payload.name} is already in contacts`);\r\n            // } else {\r\n            // const newContact = { ...payload, id: uuidv4() };\r\n\r\n            // return [newContact, ...state];\r\n            // }\r\n\r\n            return [payload, ...state];\r\n        // return [payload.contact, ...state];\r\n        case types.DELETE:\r\n            return state.filter(({ id }) => id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n    switch (type) {\r\n        case types.FILTER:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const rootReducer = combineReducers({ items, filter });\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n","import { createStore } from 'redux';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from './contacts/reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './Component/App/App';\nimport store from './redux/store';\nconsole.log(store);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__27AIU\",\"ContactItem\":\"ContactList_ContactItem__3jerE\",\"Text\":\"ContactList_Text__122S3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1sY1M\",\"FilterTitle\":\"Filter_FilterTitle__3XnRk\",\"Input\":\"Filter_Input__3k1AY\"};"],"sourceRoot":""}